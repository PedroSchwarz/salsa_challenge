// Mocks generated by Mockito 5.4.6 from annotations
// in salsa_challenge/test/features/auth/ui/stores/login_store_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i4;

import 'package:mockito/mockito.dart' as _i1;
import 'package:rxdart/rxdart.dart' as _i3;
import 'package:salsa_challenge/features/auth/auth.dart' as _i2;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeAuthRemoteDataSource_0 extends _i1.SmartFake
    implements _i2.AuthRemoteDataSource {
  _FakeAuthRemoteDataSource_0(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeUserRepository_1 extends _i1.SmartFake
    implements _i2.UserRepository {
  _FakeUserRepository_1(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeCredentialsRepository_2 extends _i1.SmartFake
    implements _i2.CredentialsRepository {
  _FakeCredentialsRepository_2(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeValueStream_3<T> extends _i1.SmartFake
    implements _i3.ValueStream<T> {
  _FakeValueStream_3(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

/// A class which mocks [AuthRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockAuthRepository extends _i1.Mock implements _i2.AuthRepository {
  MockAuthRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.AuthRemoteDataSource get authRemoteDataSource =>
      (super.noSuchMethod(
            Invocation.getter(#authRemoteDataSource),
            returnValue: _FakeAuthRemoteDataSource_0(
              this,
              Invocation.getter(#authRemoteDataSource),
            ),
          )
          as _i2.AuthRemoteDataSource);

  @override
  _i2.UserRepository get userRepository =>
      (super.noSuchMethod(
            Invocation.getter(#userRepository),
            returnValue: _FakeUserRepository_1(
              this,
              Invocation.getter(#userRepository),
            ),
          )
          as _i2.UserRepository);

  @override
  _i2.CredentialsRepository get credentialsRepository =>
      (super.noSuchMethod(
            Invocation.getter(#credentialsRepository),
            returnValue: _FakeCredentialsRepository_2(
              this,
              Invocation.getter(#credentialsRepository),
            ),
          )
          as _i2.CredentialsRepository);

  @override
  _i3.ValueStream<_i2.UserData?> get currentUser =>
      (super.noSuchMethod(
            Invocation.getter(#currentUser),
            returnValue: _FakeValueStream_3<_i2.UserData?>(
              this,
              Invocation.getter(#currentUser),
            ),
          )
          as _i3.ValueStream<_i2.UserData?>);

  @override
  _i4.Future<void> init() =>
      (super.noSuchMethod(
            Invocation.method(#init, []),
            returnValue: _i4.Future<void>.value(),
            returnValueForMissingStub: _i4.Future<void>.value(),
          )
          as _i4.Future<void>);

  @override
  _i4.Future<_i2.LoginResult> login(_i2.LoginRequest? request) =>
      (super.noSuchMethod(
            Invocation.method(#login, [request]),
            returnValue: _i4.Future<_i2.LoginResult>.value(
              _i2.LoginResult.success,
            ),
          )
          as _i4.Future<_i2.LoginResult>);
}
