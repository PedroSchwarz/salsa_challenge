// Mocks generated by Mockito 5.4.6 from annotations
// in home/test/ui/stores/home_store_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i5;

import 'package:home/data/data_sources/local/home_local_data_source.dart'
    as _i2;
import 'package:home/data/models/location_data.dart' as _i3;
import 'package:home/data/repositories/home_repository.dart' as _i4;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeHomeLocalDataSource_0 extends _i1.SmartFake
    implements _i2.HomeLocalDataSource {
  _FakeHomeLocalDataSource_0(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeLocationData_1 extends _i1.SmartFake implements _i3.LocationData {
  _FakeLocationData_1(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

/// A class which mocks [HomeRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockHomeRepository extends _i1.Mock implements _i4.HomeRepository {
  MockHomeRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.HomeLocalDataSource get homeLocalDataSource =>
      (super.noSuchMethod(
            Invocation.getter(#homeLocalDataSource),
            returnValue: _FakeHomeLocalDataSource_0(
              this,
              Invocation.getter(#homeLocalDataSource),
            ),
          )
          as _i2.HomeLocalDataSource);

  @override
  _i5.Future<void> init() =>
      (super.noSuchMethod(
            Invocation.method(#init, []),
            returnValue: _i5.Future<void>.value(),
            returnValueForMissingStub: _i5.Future<void>.value(),
          )
          as _i5.Future<void>);

  @override
  _i5.Future<List<_i3.LocationData>> getLocations() =>
      (super.noSuchMethod(
            Invocation.method(#getLocations, []),
            returnValue: _i5.Future<List<_i3.LocationData>>.value(
              <_i3.LocationData>[],
            ),
          )
          as _i5.Future<List<_i3.LocationData>>);

  @override
  _i5.Future<_i3.LocationData> getLocation({required int? id}) =>
      (super.noSuchMethod(
            Invocation.method(#getLocation, [], {#id: id}),
            returnValue: _i5.Future<_i3.LocationData>.value(
              _FakeLocationData_1(
                this,
                Invocation.method(#getLocation, [], {#id: id}),
              ),
            ),
          )
          as _i5.Future<_i3.LocationData>);

  @override
  _i5.Future<List<_i3.LocationData>> getFavoritesLocations() =>
      (super.noSuchMethod(
            Invocation.method(#getFavoritesLocations, []),
            returnValue: _i5.Future<List<_i3.LocationData>>.value(
              <_i3.LocationData>[],
            ),
          )
          as _i5.Future<List<_i3.LocationData>>);

  @override
  _i5.Future<void> updateLocation({
    required int? id,
    required bool? isFavorite,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#updateLocation, [], {
              #id: id,
              #isFavorite: isFavorite,
            }),
            returnValue: _i5.Future<void>.value(),
            returnValueForMissingStub: _i5.Future<void>.value(),
          )
          as _i5.Future<void>);
}
